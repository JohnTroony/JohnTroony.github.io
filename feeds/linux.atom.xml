<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Prewired</title><link href="http://prewired.pw/" rel="alternate"></link><link href="http://prewired.pw/feeds/linux.atom.xml" rel="self"></link><id>http://prewired.pw/</id><updated>2015-04-27T14:15:00+03:00</updated><entry><title>Rocking it! GNOME3 Shell Extensions..</title><link href="http://prewired.pw/2015/04/gnome-extension.html" rel="alternate"></link><updated>2015-04-27T14:15:00+03:00</updated><author><name>John Troon</name></author><id>tag:prewired.pw,2015-04-27:2015/04/gnome-extension.html</id><summary type="html">&lt;p&gt;I don't really give a tinker's damn about your desktop, if you have a picture of a unicorn as your wallpaper or a really old picture of Hitler smiling, that's up to you. Though, sometimes I do care about having my files/folders arranged, in a way I can remember everything on a "where-is-X" basis, and adjusting system's default settings.&lt;/p&gt;
&lt;p&gt;What GNOME offers, even after a fresh install without tweaks, is satisfying. There are decent unbiased articles&lt;sup&gt;1&lt;/sup&gt; written specifically about GNOME features and comparison made against KDE. Both Desktop-environments have their strengths and  weaknesses, choosing what fits you is kind of religious and experimental.&lt;/p&gt;
&lt;p&gt;The list of projects&lt;sup&gt;2&lt;/sup&gt; covered under GNOME is long. Here, I simply searched for some &lt;a href="https://extensions.gnome.org/"&gt;extensions&lt;/a&gt; that are potentially helpful, below is a list of what I picked:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://extensions.gnome.org/extension/97/coverflow-alt-tab/"&gt;Coverflow alt-tab&lt;/a&gt; - Nice preview of the running applications when you use Alt+Tab.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://extensions.gnome.org/extension/760/minimize-all/"&gt;Minimize all&lt;/a&gt; - A lot of windows and sometimes you just want to see your desktop?&lt;/li&gt;
&lt;li&gt;&lt;a href="https://extensions.gnome.org/extension/815/simple-dock/"&gt;Simple dock&lt;/a&gt; - Easy access to most used application?&lt;/li&gt;
&lt;li&gt;&lt;a href="https://extensions.gnome.org/extension/162/todo-list/"&gt;Todo list&lt;/a&gt; - Easily distracted and want to keep track of activities to finish?&lt;/li&gt;
&lt;li&gt;&lt;a href="https://extensions.gnome.org/extension/442/drop-down-terminal/"&gt;Drop Down Terminal&lt;/a&gt; - Just a bonus extension for getting a pseudo-terminal on the fly!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;No other extra configs required if you are using the "GNOME Tweak Tool" for the installs, apart from the &lt;a href="https://extensions.gnome.org/extension/442/drop-down-terminal/"&gt;Drop Down Terminal&lt;/a&gt; extension, which requires the &lt;em&gt;Vte library (version &amp;gt;= 0.31)&lt;/em&gt; and the &lt;em&gt;gir typelib&lt;/em&gt;.. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;install
 On Fedora/Arch: &lt;span class="s1"&gt;&amp;#39;vte3&amp;#39;&lt;/span&gt; package
 On Debian/Ubuntu:  &lt;span class="s1"&gt;&amp;#39;gir-1.2-vte-2.*&amp;#39;&lt;/span&gt; package &lt;span class="o"&gt;(&lt;/span&gt;not installed by default&lt;span class="o"&gt;)&lt;/span&gt;
 On OpenSUSE: &lt;span class="s1"&gt;&amp;#39;typelib-1_0-Vte-2.*&amp;#39;&lt;/span&gt; package &lt;span class="o"&gt;(&lt;/span&gt;not installed by default&lt;span class="o"&gt;)&lt;/span&gt;

Then, log out/restart.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you ever build&lt;sup&gt;3&lt;/sup&gt; your own extension, or find any other extension worth a try, share.. To share is divine!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;References:&lt;/p&gt;
&lt;p&gt;&lt;sup&gt;1&lt;/sup&gt; &lt;a href="http://www.diffen.com/difference/GNOME_vs_KDE"&gt;http://www.diffen.com/difference/GNOME_vs_KDE&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;sup&gt;2&lt;/sup&gt; &lt;a href="https://wiki.gnome.org/Projects"&gt;https://wiki.gnome.org/Projects&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;sup&gt;3&lt;/sup&gt; &lt;a href="https://wiki.gnome.org/Projects/GnomeShell/Extensions/StepByStepTutorial"&gt;https://wiki.gnome.org/Projects/GnomeShell/Extensions/StepByStepTutorial&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="Screenshot" src="/images/shot.png" title="Alt+Tab Gnome3 Shell Extension" /&gt;&lt;/p&gt;</summary><category term="Linux"></category></entry><entry><title>Queue &amp; Load Average in Linux</title><link href="http://prewired.pw/2015/03/Queue-and-CPULoads.html" rel="alternate"></link><updated>2015-03-19T14:15:00+03:00</updated><author><name>John Troon</name></author><id>tag:prewired.pw,2015-03-19:2015/03/Queue-and-CPULoads.html</id><summary type="html">&lt;p&gt;Queue is the current runtime queue for processes. Load averages are measurements of this metric over 5-, 10-, and 15- minute
intervals. So, the runtime queue is a count of the number of processes ready to run at any given point in time.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;uptime
 14:17pm  up   0:57,  &lt;span class="m"&gt;6&lt;/span&gt; users,  load average: 0.37, 0.54, 0.44
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;That means, a value less than 1 is not bad and there is never a process idling in the queue waiting to be run. Therefore, when
the load averages start to rise over 1, know there is always a process ready and waiting to be scheduled!&lt;/p&gt;
&lt;p&gt;Obviously, when the load averages rise above 1 there is something in the system being delayed. If it's a mission critical system, running some serious stuff in a production environment, getting an additional CPU can solve the problem and ensure that there is a better chance of “schedulable” time.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;These data can be monitored through:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;uptime
top
vmstat
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;uptime somehow has a nice output of the load average data.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Read:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="http://blog.scoutapp.com/articles/2009/07/31/understanding-load-averages"&gt;Understanding Linux CPU Load&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://prutser.wordpress.com/2012/04/23/understanding-linux-load-average-part-1"&gt;Understanding Linux Load Average – Part 1&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</summary><category term="Linux"></category></entry><entry><title>Securing backups to Dropbox with LUKS</title><link href="http://prewired.pw/2015/02/dropbox-with-LUKS.html" rel="alternate"></link><updated>2015-02-25T12:28:00+03:00</updated><author><name>John Troon</name></author><id>tag:prewired.pw,2015-02-25:2015/02/dropbox-with-LUKS.html</id><summary type="html">&lt;h3&gt;Dropbox meets LUKS&lt;/h3&gt;
&lt;p&gt;When it comes to my data, I like it private even though I've nothing to hide (ignore the paradox). I've been using &lt;a href="https://www.dropbox.com/"&gt;Dropbox&lt;/a&gt; and &lt;a href="http://docs.openstack.org/developer/swift/"&gt;Swift (OpenStack Object Storage project)&lt;/a&gt; to backup my data.&lt;/p&gt;
&lt;p&gt;I tried writing a BASH script to recursively encrypt all the content of a folder with my public &lt;a href="http://prewired.pw/2015/02/New-GPG.html"&gt;GPG key&lt;/a&gt; and sync the encrypted content of the folder with my remote backup (but with time it wasn't cool, not at all!). I had to plug-in my USB disk that has my private GPG keys each time I had to open any of the encrypted files, what a PITA!&lt;/p&gt;
&lt;p&gt;Now, I've been using Dropbox to synchronize a single binary file that is LUKS-encrypted Linux file system. It might not seem cool but it's easier for me :) &lt;/p&gt;
&lt;p&gt;This process (of Dropbox+LUKS) is sort of a cliché right now but I'm just posting to share my simplified way of doing it...&lt;/p&gt;
&lt;h3&gt;Step one:&lt;/h3&gt;
&lt;p&gt;Install Dropbox, head over to &lt;a href="https://www.dropbox.com/install?os=lnx"&gt;Dropbox's site&lt;/a&gt; and get Dropbox. I'm currently using Ubuntu 14 (Yes, Ubuntu!).. or do a Dropbox headless Install via command line&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;32-bit:

&lt;span class="nb"&gt;cd&lt;/span&gt; ~ &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; wget -O - &lt;span class="s2"&gt;&amp;quot;https://www.dropbox.com/download?plat=lnx.x86&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; tar xzf -

64-bit:

&lt;span class="nb"&gt;cd&lt;/span&gt; ~ &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; wget -O - &lt;span class="s2"&gt;&amp;quot;https://www.dropbox.com/download?plat=lnx.x86_64&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; tar xzf -

Next, run the Dropbox daemon from the newly created .dropbox-dist folder.

~/.dropbox-dist/dropboxd
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Step Two:&lt;/h3&gt;
&lt;p&gt;Make sure you have a working Dropbox Account, if not, &lt;a href="https://www.dropbox.com/register"&gt;register for a Dropbox account&lt;/a&gt;. Then sign-in to Dropbox via your installed Dropbox client (make sure the dropbox daemon is running).&lt;/p&gt;
&lt;p&gt;You should have a folder named Dropbox in your home folder after you've logged-in to your account. &lt;/p&gt;
&lt;h3&gt;Step Three:&lt;/h3&gt;
&lt;p&gt;Download &lt;a href="https://github.com/JohnTroony/LUKS-OPs/releases"&gt;Luks-Ops&lt;/a&gt;, a script that I've written to automate the basic LUKS operation on Linux.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# 1. Clone the repo&lt;/span&gt;
git clone https://github.com/JohnTroony/LUKS-OPs.git
&lt;span class="nb"&gt;cd &lt;/span&gt;LUKS-OPs

&lt;span class="c"&gt;# 2. Change to super user&lt;/span&gt;
sudo su 

&lt;span class="c"&gt;# 3. Copy the script to /bin  as luksOps&lt;/span&gt;
cp luks-ops.sh /bin/luksOps 

&lt;span class="c"&gt;# 4. Move into the Dropbox folder to create the LUKS container&lt;/span&gt;
&lt;span class="nb"&gt;cd&lt;/span&gt; /home/user/Dropbox 

&lt;span class="c"&gt;# 5. Create a LUKS container but don&amp;#39;t mount it, DISKNAME is the label, 1000 is size in MB&lt;/span&gt;
luksOps new DISKNAME 1000

&lt;span class="c"&gt;# 6. Move the created LUKS container (DISKNAME) to /home/user/Dropbox&lt;/span&gt;
mv /usr/DISKNAME .

&lt;span class="c"&gt;# 7. Mount the LUKS container. This will ask for the pass phrase.&lt;/span&gt;
luksOps mount DISKNAME

&lt;span class="c"&gt;# 8. Add files to the Mounted LUKS container then use the following command to exit&lt;/span&gt;
luksOps unmount-all
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;That is all, once you have the LUKS container in the &lt;code&gt;~/Dropbox&lt;/code&gt; folder, you can always mount it, add files (You wouldn't want to be adding and removing large multimedia files to the container though.
), unmount it and let Dropbox sync the changes!&lt;/p&gt;
&lt;p&gt;N.B: check luksOps menu for more options like to unmount a single volume instead of all.&lt;/p&gt;
&lt;p&gt;Done!&lt;/p&gt;
&lt;h3&gt;I've to checkout:&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="http://sovworks.com/eds/"&gt;EDS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/EncFS"&gt;EncFS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://duplicity.nongnu.org/"&gt;duplicity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tahoe-lafs.org/trac/tahoe-lafs/wiki"&gt;Tahoe-LAFS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://apps.ubuntu.com/cat/applications/precise/cryptkeeper/"&gt;CryptKeeper&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Let's encrypt!&lt;/h3&gt;</summary><category term="LUKS"></category><category term="security"></category></entry><entry><title>My GnuPG Transition</title><link href="http://prewired.pw/2015/02/New-GPG.html" rel="alternate"></link><updated>2015-02-12T16:28:00+03:00</updated><author><name>John Troon</name></author><id>tag:prewired.pw,2015-02-12:2015/02/New-GPG.html</id><summary type="html">&lt;h3&gt;The old key, which I am transitional away from, is:&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;pub  4096R/D5E28EE0 (0x192BA1E6D5E28EE0) 2014-02-22 
John Ombagi (Linux, DB &amp;amp; Infosec) &amp;lt;ombagi@promaxted.com&amp;gt;
John Ombagi (Linux, DB &amp;amp; Infosec) &amp;lt;jayombagi@gmail.com&amp;gt;
Fingerprint=ACF5 FAFE 3C3D 4CE5 95D9  C31B 192B A1E6 D5E2 8EE0
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;The new key, to which I am transitioning, is:&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;pub  4096R/AD3A484C (0x7b85a886ad3a484c) 2014-11-10 
John Ombagi &amp;lt;ombagi@outlook.com&amp;gt;
John Ombagi (Troon) &amp;lt;jayombagi@gmail.com&amp;gt;
Fingerprint=CC89 97A6 1F78 304A 7D91  C27F 7B85 A886 AD3A 484C
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/JohnTroony/My-GPG-key-transition/master/gpg-transition.txt"&gt;gpg-transition.txt&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Contains detailed info about my GPG transition/revocation.&lt;/p&gt;
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/JohnTroony/My-GPG-key-transition/master/sig1.txt"&gt;sig1.txt&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Signature of the gpg-transition.txt using the old key 0x192BA1E6D5E28EE0&lt;/p&gt;
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/JohnTroony/My-GPG-key-transition/master/sig2.txt"&gt;sig2.txt&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Signature of the gpg-transition.txt using the new key 0x7b85a886ad3a484c&lt;/p&gt;
&lt;h2&gt;Updating&lt;/h2&gt;
&lt;p&gt;To fetch the full new key from a public key server using GnuPG, run:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    gpg --keyserver keys.gnupg.net --recv-key 0x7B85A886AD3A484C
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you have already validated my old key, you can then validate that the
new key is signed by my old key:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    gpg --check-sigs 0x7B85A886AD3A484C
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Just incase you need to clarify anything about my GnuPG keys, reach me via &lt;strong&gt;jayombagi at gmail dot com&lt;/strong&gt;&lt;/p&gt;</summary><category term="GPG"></category><category term="security"></category></entry></feed>